champsim:
    warmup_instructions: 50
    sim_instructions: 200
    track_pc_stats: true
    track_addr_stats: false
    track_pref: true
    branch_pred: 'perceptron'
    seeds: [1337]
l1d:
    pref_candidates: []
    hybrids: [1]
    degrees: [1]
l2c:
    pref_candidates: []
    hybrids: [1]
    degrees: [1]
llc:
    sets: 2048
    repl: 'ship'
    pref_candidates:
        - 'bingo'    # Bingo
        - 'bop'      # Best Offset
        - 'scooby'   # Pythia
        - 'sisb'     # Idealized ISB
        - 'sms'      # SMS
        - 'spp_dev2' # SPP
    hybrids: [1, 2]
    degrees: [1]
bingo:
    dyn_degree: true
pythia:
    # Degree
    dyn_degree: true
    # Learning
    features: [[8, 10]] # PC+Delta + Last 4 Deltas (Paper)
    pooling: 'max'
    alpha: 0.006508802942367162
    gamma: 0.556300959940946
    epsilon: 0.0018228444309622588
    policy: 'EGreedy'
    learning_type: 'SARSA'  
    # Double/level-aware Pythia
    dyn_level_threshold: [] 
    separate_lowconf_pt: false # Whether to use separate EQs for high- and 
                               # low-confidence prefetches (Double Pythia only, for now).
    # Prefetch table
    pt_size: 256
    lowconf_pt_size: 256
spp_dev2:
    dyn_degree: true
paths:
    exp_dir: '/scratch/cluster/cmolder/prefetcher_zoo/zoo_cloudsuite/'
    trace_dir: '/scratch/cluster/cmolder/traces/cloudsuite/champsim/'
    champsim_dir: '/u/cmolder/GitHub/Pythia/'
condor:
    user: 'cmolder@cs.utexas.edu'
    group: 'GRAD'
    project: 'ARCHITECTURE'
    description: 'Prefetcher Zoo'